package org.nbgames.gunu;

import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.util.prefs.PreferenceChangeEvent;
import java.util.prefs.PreferenceChangeListener;
import org.nbgames.core.game.GameTopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.util.NbBundle;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;

/**
 *
 * @author Patrik Karlsson <patrik@trixon.se>
 */
@ConvertAsProperties(
        dtd = "-//org.nbgames.gunu//Gunu//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "GunuTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@Messages({
    "CTL_GameVersion=1.0.0",
    "CTL_GameCopyright=Â© 2013 Patrik Karlsson"})
public final class GunuTopComponent extends GameTopComponent {

    private final GunuController mGameController;

    public GunuTopComponent() {
        initComponents();
        String name = NbBundle.getMessage(GunuTopComponent.class, "CTL_Name");
        setName(name);
        mGameController = new GunuController(this, name, Bundle.CTL_GameVersion(), Bundle.CTL_GameCopyright(), "Logic/Gunu");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.GridBagLayout());
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        mGameController.newGame();
    }

    @Override
    public void componentClosed() {
    }

    void writeProperties(java.util.Properties p) {
        p.setProperty("version", "1.0");
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
    }
}
