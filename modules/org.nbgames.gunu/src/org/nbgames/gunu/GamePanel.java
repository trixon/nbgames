package org.nbgames.gunu;

import java.awt.Dimension;
import java.util.Random;
import org.nbgames.core.NbGames;
import org.openide.util.NbBundle;
import org.openide.util.NbPreferences;

/**
 *
 * @author Patrik Karlsson <patrik@trixon.se>
 */
@NbBundle.Messages({
    "CTL_StatusEquals=Congratulations!",
    "CTL_StatusHigh=To high...",
    "CTL_StatusLow=To low..."
})

public class GamePanel extends org.nbgames.core.game.GamePanel {

    GameController mGameController;
    private long mValue;
    private int mCounter;
    private final Random mRandom = new Random();

    /**
     * Creates new form NumberGuesserGamePanel
     */
    public GamePanel() {
        initComponents();

        Dimension dimension = new Dimension(400, 300);

        setMinimumSize(dimension);
        setPreferredSize(dimension);
        setSize(dimension);
        setOpaque(false);
    }

    public GamePanel(GameController gameController) {
        this();

        mGameController = gameController;
    }

    void startNewGame() {
        NbGames.log("NumberGuesser: startNewGame");

        long min = NbPreferences.forModule(OptionPanel.class).getLong(Prefs.KEY_MIN, Prefs.KEY_MIN_DEF);
        long max = NbPreferences.forModule(OptionPanel.class).getLong(Prefs.KEY_MAX, Prefs.KEY_MAX_DEF);

        String info = NbBundle.getMessage(GamePanel.class, "GamePanel.infoLabel.text", min, max);
        infoLabel.setText(info);
        valueTextField.setText(Long.toString(min));
        valueTextField.setEnabled(true);
        valueTextField.selectAll();

        guessButton.setEnabled(true);
        statusLabel.setText(NbBundle.getMessage(this.getClass(), "GamePanel.statusLabel.text"));

        mValue = min + mRandom.nextInt((int) (max - min + 1));
        mCounter = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        guessButton = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();
        valueTextField = new javax.swing.JFormattedTextField();

        setBackground(new java.awt.Color(51, 255, 51));

        guessButton.setFont(new java.awt.Font("DejaVu Sans", 0, 48)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(guessButton, org.openide.util.NbBundle.getMessage(GamePanel.class, "GamePanel.guessButton.text")); // NOI18N
        guessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guessButtonActionPerformed(evt);
            }
        });

        statusLabel.setFont(new java.awt.Font("DejaVu Sans", 0, 48)); // NOI18N
        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(statusLabel, org.openide.util.NbBundle.getMessage(GamePanel.class, "GamePanel.statusLabel.text")); // NOI18N

        infoLabel.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        infoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(infoLabel, org.openide.util.NbBundle.getMessage(GamePanel.class, "GamePanel.infoLabel.text")); // NOI18N

        valueTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        valueTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        valueTextField.setFont(new java.awt.Font("DejaVu Sans", 0, 48)); // NOI18N
        valueTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(valueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(guessButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(infoLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(statusLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(infoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guessButton)
                .addGap(18, 18, 18)
                .addComponent(statusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void guessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guessButtonActionPerformed
        mCounter++;
        long value = (Long) valueTextField.getValue();
        String status = null;
        if (value == mValue) {
            status = Bundle.CTL_StatusEquals();
            valueTextField.setEnabled(false);
            guessButton.setEnabled(false);
        } else if (value > mValue) {
            status = Bundle.CTL_StatusHigh();
        } else if (value < mValue) {
            status = Bundle.CTL_StatusLow();
        }
        statusLabel.setText(String.format("(%d) %s", mCounter, status));
    }//GEN-LAST:event_guessButtonActionPerformed

    private void valueTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueTextFieldActionPerformed
        guessButton.doClick();
        valueTextField.selectAll();
    }//GEN-LAST:event_valueTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton guessButton;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JFormattedTextField valueTextField;
    // End of variables declaration//GEN-END:variables
}
