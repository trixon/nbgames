package org.nbgames.core.options;

import org.nbgames.core.GlobalOptions;
import se.trixon.almond.AlmondOptions;
import se.trixon.almond.dialogs.ColorChooserDialog;

/**
 *
 * @author Patrik Karlsson <patrik@trixon.se>
 */
final class LookAndFeelPanel extends javax.swing.JPanel {

    private final LookAndFeelOptionsPanelController mController;
    private final GlobalOptions mOptions = GlobalOptions.INSTANCE;

    LookAndFeelPanel(LookAndFeelOptionsPanelController controller) {
        mController = controller;
        initComponents();

        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        confirmExitCheckBox = new javax.swing.JCheckBox();
        windowBackgroundPanel = new javax.swing.JPanel();
        upperWindowBackgroundButton = new se.trixon.almond.swing.ColorChooserButton();
        lowerWindowBackgroundButton = new se.trixon.almond.swing.ColorChooserButton();

        org.openide.awt.Mnemonics.setLocalizedText(confirmExitCheckBox, org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.confirmExitCheckBox.text")); // NOI18N
        confirmExitCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmExitCheckBoxActionPerformed(evt);
            }
        });

        windowBackgroundPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.windowBackgroundPanel.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(upperWindowBackgroundButton, org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.upperWindowBackgroundButton.text")); // NOI18N
        upperWindowBackgroundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upperWindowBackgroundButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lowerWindowBackgroundButton, org.openide.util.NbBundle.getMessage(LookAndFeelPanel.class, "LookAndFeelPanel.lowerWindowBackgroundButton.text")); // NOI18N
        lowerWindowBackgroundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lowerWindowBackgroundButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout windowBackgroundPanelLayout = new javax.swing.GroupLayout(windowBackgroundPanel);
        windowBackgroundPanel.setLayout(windowBackgroundPanelLayout);
        windowBackgroundPanelLayout.setHorizontalGroup(
            windowBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(windowBackgroundPanelLayout.createSequentialGroup()
                .addGroup(windowBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(upperWindowBackgroundButton, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addComponent(lowerWindowBackgroundButton))
                .addGap(0, 40, Short.MAX_VALUE))
        );
        windowBackgroundPanelLayout.setVerticalGroup(
            windowBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(windowBackgroundPanelLayout.createSequentialGroup()
                .addComponent(upperWindowBackgroundButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lowerWindowBackgroundButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(confirmExitCheckBox)
                    .addComponent(windowBackgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(155, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(confirmExitCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(windowBackgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(161, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void upperWindowBackgroundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upperWindowBackgroundButtonActionPerformed
        upperWindowBackgroundButton.setColor(ColorChooserDialog.showDialog(upperWindowBackgroundButton.getColor()));
    }//GEN-LAST:event_upperWindowBackgroundButtonActionPerformed

    private void lowerWindowBackgroundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowerWindowBackgroundButtonActionPerformed
        lowerWindowBackgroundButton.setColor(ColorChooserDialog.showDialog(lowerWindowBackgroundButton.getColor()));
    }//GEN-LAST:event_lowerWindowBackgroundButtonActionPerformed

    private void confirmExitCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmExitCheckBoxActionPerformed
        mController.changed();
    }//GEN-LAST:event_confirmExitCheckBoxActionPerformed

    void load() {
        lowerWindowBackgroundButton.setColor(mOptions.getColor(GlobalOptions.ColorItem.WINDOW_LOWER));
        upperWindowBackgroundButton.setColor(mOptions.getColor(GlobalOptions.ColorItem.WINDOW_UPPER));
        confirmExitCheckBox.setSelected(AlmondOptions.INSTANCE.getConfirmExit());
    }

    void store() {
        mOptions.setColor(GlobalOptions.ColorItem.WINDOW_LOWER, lowerWindowBackgroundButton.getColor());
        mOptions.setColor(GlobalOptions.ColorItem.WINDOW_UPPER, upperWindowBackgroundButton.getColor());
        AlmondOptions.INSTANCE.setConfirmExit(confirmExitCheckBox.isSelected());
    }

    boolean valid() {
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox confirmExitCheckBox;
    private se.trixon.almond.swing.ColorChooserButton lowerWindowBackgroundButton;
    private se.trixon.almond.swing.ColorChooserButton upperWindowBackgroundButton;
    private javax.swing.JPanel windowBackgroundPanel;
    // End of variables declaration//GEN-END:variables
}
