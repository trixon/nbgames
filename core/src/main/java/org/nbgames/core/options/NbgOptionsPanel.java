/*
 * Copyright 2016 Patrik Karlsson.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.nbgames.core.options;

import org.nbgames.core.NbgOptions;
import org.openide.awt.Actions;

/**
 *
 * @author Patrik Karlsson
 */
public class NbgOptionsPanel extends javax.swing.JPanel {

    private final NbgOptions mOptions = NbgOptions.getInstance();

    /**
     * Creates new form NbGamesOptionsPanel
     */
    public NbgOptionsPanel() {
        initComponents();
        init();
    }

    private void init() {
        pluginButton.setAction(Actions.forID("System", "org.netbeans.modules.autoupdate.ui.actions.PluginManagerAction"));
        pluginButton.setText(Actions.cutAmpersand(pluginButton.getText()));

        optionButton.setAction(Actions.forID("Window", "org.netbeans.modules.options.OptionsWindowAction"));
        optionButton.setText(Actions.cutAmpersand(optionButton.getText()));

        colorCheckBox.setSelected(mOptions.isCustomWindowBackground());
        lowerColorComboBox.setSelectedColor(mOptions.getColor(NbgOptions.ColorItem.WINDOW_LOWER));
        upperColorComboBox.setSelectedColor(mOptions.getColor(NbgOptions.ColorItem.WINDOW_UPPER));

        toolbarColorCheckBox.setSelected(mOptions.isCustomToolbarBackground());
        toolbarColorComboBox.setSelectedColor(mOptions.getColor(NbgOptions.ColorItem.TOOLBAR));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        panel = new javax.swing.JPanel();
        colorCheckBox = new javax.swing.JCheckBox();
        upperLabel = new javax.swing.JLabel();
        lowerLabel = new javax.swing.JLabel();
        upperColorComboBox = new org.openide.awt.ColorComboBox();
        lowerColorComboBox = new org.openide.awt.ColorComboBox();
        toolbarColorCheckBox = new javax.swing.JCheckBox();
        toolbarColorComboBox = new org.openide.awt.ColorComboBox();
        pluginButton = new javax.swing.JButton();
        optionButton = new javax.swing.JButton();

        panel.setLayout(new java.awt.GridBagLayout());

        colorCheckBox.setText(org.openide.util.NbBundle.getMessage(NbgOptionsPanel.class, "NbgOptionsPanel.colorCheckBox.text")); // NOI18N
        colorCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorCheckBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 0, 8);
        panel.add(colorCheckBox, gridBagConstraints);

        upperLabel.setText(org.openide.util.NbBundle.getMessage(NbgOptionsPanel.class, "NbgOptionsPanel.upperLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 0, 8);
        panel.add(upperLabel, gridBagConstraints);

        lowerLabel.setText(org.openide.util.NbBundle.getMessage(NbgOptionsPanel.class, "NbgOptionsPanel.lowerLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 0, 8);
        panel.add(lowerLabel, gridBagConstraints);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, colorCheckBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), upperColorComboBox, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        upperColorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upperColorComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 8);
        panel.add(upperColorComboBox, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, colorCheckBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), lowerColorComboBox, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        lowerColorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lowerColorComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 8);
        panel.add(lowerColorComboBox, gridBagConstraints);

        toolbarColorCheckBox.setText(org.openide.util.NbBundle.getMessage(NbgOptionsPanel.class, "NbgOptionsPanel.toolbarColorCheckBox.text")); // NOI18N
        toolbarColorCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbarColorCheckBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 0, 0);
        panel.add(toolbarColorCheckBox, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, toolbarColorCheckBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), toolbarColorComboBox, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        toolbarColorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbarColorComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 8);
        panel.add(toolbarColorComboBox, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pluginButton)
                        .addGap(18, 18, 18)
                        .addComponent(optionButton))
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(optionButton)
                    .addComponent(pluginButton))
                .addContainerGap())
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void colorCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorCheckBoxActionPerformed
        mOptions.setCustomWindowBackground(colorCheckBox.isSelected());
    }//GEN-LAST:event_colorCheckBoxActionPerformed

    private void upperColorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upperColorComboBoxActionPerformed
        mOptions.setColor(NbgOptions.ColorItem.WINDOW_UPPER, upperColorComboBox.getSelectedColor());
    }//GEN-LAST:event_upperColorComboBoxActionPerformed

    private void lowerColorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowerColorComboBoxActionPerformed
        mOptions.setColor(NbgOptions.ColorItem.WINDOW_LOWER, lowerColorComboBox.getSelectedColor());
    }//GEN-LAST:event_lowerColorComboBoxActionPerformed

    private void toolbarColorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbarColorComboBoxActionPerformed
        mOptions.setColor(NbgOptions.ColorItem.TOOLBAR, toolbarColorComboBox.getSelectedColor());
    }//GEN-LAST:event_toolbarColorComboBoxActionPerformed

    private void toolbarColorCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbarColorCheckBoxActionPerformed
        mOptions.setCustomToolbarBackground(toolbarColorCheckBox.isSelected());
    }//GEN-LAST:event_toolbarColorCheckBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox colorCheckBox;
    private org.openide.awt.ColorComboBox lowerColorComboBox;
    private javax.swing.JLabel lowerLabel;
    private javax.swing.JButton optionButton;
    private javax.swing.JPanel panel;
    private javax.swing.JButton pluginButton;
    private javax.swing.JCheckBox toolbarColorCheckBox;
    private org.openide.awt.ColorComboBox toolbarColorComboBox;
    private org.openide.awt.ColorComboBox upperColorComboBox;
    private javax.swing.JLabel upperLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
